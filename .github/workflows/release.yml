name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true

jobs:

  initial_release:
    name: Create base release ${{ github.event.inputs.version }}
    runs-on: ubuntu-latest
    outputs:
      crate-version: ${{steps.get-crate-version.outputs.crate-version}}
    steps:
      -
        name: Get crate version
        id: get-crate-version
        run: echo ::set-output name=crate-version::``$(echo ${{ github.event.inputs.version }} | cut -dv -f2)``
        shell: bash
      -
        name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false

  release_container:
    name: Release container ${{ github.event.inputs.version }}
    runs-on: ubuntu-latest
    needs: initial_release
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
      -
        name: Bump crate version
        uses: thomaseizinger/set-crate-version@v1
        with:
          version: ${{steps.get-crate-version.outputs.crate-version}}
      -
        name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push container
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/hello-rs:${{ github.event.inputs.version }}

  release_assets:
    name: Release assets ${{ github.event.inputs.version }}
    runs-on: ${{ matrix.config.os }}
    needs: initial_release
    strategy:
      fail-fast: false
      matrix:
        config:
          # Linux
          - {os: ubuntu-latest, toolchain: stable, target: x86_64-unknown-linux-gnu, target_cpu: generic, cross: false}
          - {os: ubuntu-latest, toolchain: stable, target: x86_64-unknown-linux-gnu, target_cpu: broadwell, cross: false}
          - {os: ubuntu-latest, toolchain: stable, target: aarch64-unknown-linux-gnu, target_cpu: generic, cross: true}
          - {os: ubuntu-latest, toolchain: stable, target: arm-unknown-linux-gnueabi, target_cpu: generic, cross: true}
          - {os: ubuntu-latest, toolchain: stable, target: armv7-unknown-linux-gnueabihf, target_cpu: generic, cross: true}
          # mips and powerpc are not compitble with ring v0.16.10, so they are disabled for now
          #          - {os: ubuntu-latest, target: mips64el-unknown-linux-gnuabi64, cross: true}
          #          - {os: ubuntu-latest, target: powerpc64le-unknown-linux-gnu, cross: true}
          - {os: ubuntu-latest, toolchain: stable,  target: x86_64-unknown-linux-musl, target_cpu: generic, cross: true}
          - {os: ubuntu-latest, toolchain: stable,  target: x86_64-unknown-linux-musl, target_cpu: broadwell, cross: true}
          - {os: ubuntu-latest, toolchain: stable, target: aarch64-linux-android, target_cpu: generic, cross: true}
          # Macos
          - {os: macos-latest, toolchain: stable, target: x86_64-apple-darwin, target_cpu: generic, cross: false}
          - {os: macos-latest, toolchain: stable, target: x86_64-apple-darwin, target_cpu: broadwell, cross: false}
          # Windows
          - {os: windows-latest, toolchain: stable-x86_64-pc-windows-gnu, target: x86_64-pc-windows-gnu, target_cpu: generic, cross: false}
          - {os: windows-latest, toolchain: stable-x86_64-pc-windows-msvc, target: x86_64-pc-windows-msvc, target_cpu: generic, cross: false}
          - {os: windows-latest, toolchain: stable-x86_64-pc-windows-gnu, target: x86_64-pc-windows-gnu, target_cpu: broadwell, cross: false}
          - {os: windows-latest, toolchain: stable-x86_64-pc-windows-msvc, target: x86_64-pc-windows-msvc, target_cpu: broadwell, cross: false}
    steps:
      -
        name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.config.toolchain }}
          target: ${{ matrix.config.target }}
          override: true
          default: true
      -
        name: Downgrade cross
        uses: actions-rs/cargo@v1
        if: ${{ matrix.config.cross }}
        with:
          command: install
          args: --version 0.1.16 cross
      -
        name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
      -
        name: Bump crate version
        uses: thomaseizinger/set-crate-version@v1
        with:
          version: ${{steps.get-crate-version.outputs.crate-version}}
      -
        name: Build application
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.config.cross }}
          command: rustc
          args: --manifest-path ./Cargo.toml --release --target ${{ matrix.config.target }} --no-default-features -- -C target-cpu=${{ matrix.config.target_cpu }}
      -
        name: Pack binaries if unix
        if: matrix.config.os != 'windows-latest'
        run: tar -C ./target/${{ matrix.config.target }}/release -czvf hello-rs-${{ github.event.inputs.version }}-${{ matrix.config.target }}-${{ matrix.config.target_cpu }}.tar.gz hello-rs
      -
        name: Pack binaries if windows
        if: matrix.config.os == 'windows-latest'
        run: compress-archive ./target/${{ matrix.config.target }}/release/hello-rs.exe hello-rs-${{ github.event.inputs.version }}-${{ matrix.config.target }}-${{ matrix.config.target_cpu }}.zip
      -
        name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: hello-rs-${{ github.event.inputs.version }}-${{ matrix.config.target }}-${{ matrix.config.target_cpu }}.*
          asset_name: hello-rs-${{ github.event.inputs.version }}-${{ matrix.config.target }}-${{ matrix.config.target_cpu }}
          tag: ${{ github.event.inputs.version }}
          file_glob: true
          overwrite: true